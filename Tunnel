#!/bin/bash
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
plain='\033[0m'

clear
echo -e "
—————————————————————————————————————————————————————————————
        argo tunnel一键部署脚本(穿透本地端口到cloudflare)
 ${green}
        本脚本仅适合域名已经托管在cloudflare的用户使用

        原作者   翔翎
        二改脚本 雪小板
${plain}
—————————————————————————————————————————————————————————————
"

[[ $EUID -ne 0 ]] && echo -e "${red}错误: ${plain} 必须使用root用户运行此脚本！\n" && exit 1


cf=$(cloudflared tunnel list >>/dev/null 2>&1)
if [[ $(echo $cf |grep -v "No tunnels") = "" ]]
then
echo "请问你要新增隧道还是删除隧道?"
read -p "输入del或者回车："  yon
if [ "$yon" = "del" ];
  then cloudflared tunnel list
  read -p "输入要删除的隧道名(name)："  Tunnelname
  cloudflared tunnel cleanup $Tunnelname
  cloudflared tunnel delete $Tunnelname
  
  if [[ $(echo $cf |grep -v '$Tunnelname' ) = "" ]]
  then
  echo "删除成功"
  exit 1
  fi
  fi
  fi
if [ "$yon" != "del" ];
then
  CPU=$(uname -m)
  if [[ "$CPU" == "aarch64" ]]
  then
    cpu=arm64
  elif [[ "$CPU" == "arm" ]]
  then
    cpu=arm
  elif [[ "$CPU" == "x86_64" ]]
  then
    cpu=amd64
  else
  echo "脚本不支持此服务器架构"
  fi

sys=$(cat /etc/issue)
if [[ $(echo $sys |grep -i -E 'debian|ubuntu') != "" ]]
then a=apt;
elif [[ $(echo $sys |grep -i 'centos') != "" ]]
then a=yum;
else echo "脚本暂时仅支持debian|ubuntu|centos"
fi
#安装系统依赖
$a update -y> /dev/null 2>&1 
$a install wget supervisor -y > /dev/null 2>&1 

#开始拉取argo tunnel
file1="/usr/bin/cloudflared"
if [ ! -f "$file1" ]; then
wget  "https://ghproxy.com/https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-${cpu}" -O cloudflared
chmod +x cloudflared && cp cloudflared /usr/bin
fi
file="/root/.cloudflared/cert.pem"
if [ ! -f "$file" ]; then
echo -e "${green}请点击或者复制下方生成的授权链接，进入CF管理面板进行授权操作。${plain}"
cloudflared login
echo -e "${green}授权完成，请按照指令提示继续${plain}"
fi

read -p "请输入要穿透到cloudflare的域名(不需要输入http://): " httpurl
read -p "请输入本地web服务的url地址(http://ip:port): " localurl
read -p "请输入任意隧道名: " Tunnel

cloudflared tunnel create $Tunnel
cloudflared tunnel route dns $Tunnel $httpurl
nohup cloudflared tunnel run --url ${localurl} ${Tunnel} >>/dev/null 2>&1 &
echo -e "${green}
          公网域名：${httpurl}
          本地地址：${localurl}"
exit 1
fi
